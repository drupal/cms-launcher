name: Linux

on:
  push:
    branches:
      - main
      # PR branches that alter the build process should be prefixed with `build/`, so
      # that this workflow runs.
      - 'build/**'
  workflow_call:
  workflow_dispatch:

env:
  PHP_EXTENSIONS: bz2,ctype,curl,dom,filter,gd,iconv,mbstring,opcache,openssl,pcntl,pdo,pdo_sqlite,phar,posix,session,simplexml,sodium,sqlite3,tokenizer,xml,xmlwriter,yaml,zip,zlib
  PHP_LIBRARIES: freetype,libavif,libjpeg,libwebp
  PHP_VERSION: 8.3
  PUBLISH: never

jobs:
  build:
    name: Build on ${{ matrix.runner }}
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - ubuntu-22.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          tools: composer

      - name: Generate cache key
        shell: bash
        run: |
          CACHE_KEY=${{ runner.os }}-${{ runner.arch }}-$PHP_VERSION-$(echo $PHP_EXTENSIONS | tr ',' '-')
          echo "CACHE_KEY=${CACHE_KEY}" >> "$GITHUB_ENV"

      # Cache the built PHP interpreter.
      - id: cache-php
        name: Cache binaries
        uses: actions/cache@v4
        with:
          path: build/buildroot/bin
          key: php-${{ env.CACHE_KEY }}

      - if: steps.cache-php.outputs.cache-hit != 'true'
        name: Build PHP interpreter
        run: |
          composer install
          composer exec spc -- download --with-php="${{ env.PHP_VERSION }}" --for-extensions="${{ env.PHP_EXTENSIONS }}" --prefer-pre-built
          composer exec spc -- doctor
          composer exec spc -- build "${{ env.PHP_EXTENSIONS }}" --build-cli --with-libs="${{ env.PHP_LIBRARIES }}" --debug
        working-directory: build

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Set up Yarn
        run: |
          corepack enable
          yarn set version berry

# Dependency caching is temporarily disabled due to https://github.com/npm/cli/issues/4828.
#      - name: Cache dependencies
#        id: cache
#        uses: actions/cache@v4
#        with:
#          path: node_modules
#          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
#       if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Enable publishing for release branch
        if: github.ref_name == 'main'
        run: |
          echo "PUBLISH=onTagOrDraft" >> $GITHUB_ENV

      - name: Extract Composer and make application
        run: |
          cp ./build/buildroot/bin/php ./bin
          cp $(which composer) composer.phar
          phar extract -f composer.phar ./composer
          rm composer.phar
          chmod +x ./bin/php
          curl https://curl.haxx.se/ca/cacert.pem --fail --location --output cacert.pem
          ls -lR bin
          yarn run build
          npx electron-builder --publish=${{ env.PUBLISH }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
