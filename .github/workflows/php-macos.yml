name: PHP (macOS)

on:
  workflow_call:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PHP_EXTENSIONS: bz2,ctype,curl,dom,filter,gd,iconv,mbstring,opcache,openssl,pcntl,pdo,pdo_sqlite,phar,posix,session,simplexml,sodium,sqlite3,tokenizer,xml,xmlwriter,yaml,zip,zlib
  PHP_LIBRARIES: freetype,libavif,libjpeg,libwebp
  PHP_VERSION: 8.3

jobs:
  build-platform:
    name: Build
    strategy:
      matrix:
        os:
          - macos-13  # x64
          - macos-14  # arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: crazywhalecc/static-php-cli
          ref: 2.5.2

      - name: Generate cache key
        run: |
          CACHE_KEY=${{ runner.os }}-${{ runner.arch }}-$PHP_VERSION--$(echo $PHP_EXTENSIONS | tr ',' '-')
          echo "CACHE_KEY=${CACHE_KEY}" >> $GITHUB_ENV

      # Cache the built binaries so we can skip the build steps if there is a cache hit.
      - id: cache
        name: Cache binaries
        uses: actions/cache@v4
        with:
          path: buildroot/bin
          key: php-${{ env.CACHE_KEY }}

      # Install missing packages need to build PHP.
      - if: steps.cache.outputs.cache-hit != 'true'
        run: brew install automake gzip

      - if: steps.cache.outputs.cache-hit != 'true'
        name: "Set up PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: latest
          tools: pecl, composer
          extensions: curl, openssl, mbstring, tokenizer
          ini-values: memory_limit=-1

      - if: steps.cache.outputs.cache-hit != 'true'
        name: Install Composer dependencies
        run: composer install --no-dev

      # Fetch the source code for PHP's dependencies if they aren't already cached.
      - if: steps.cache.outputs.cache-hit != 'true'
        name: Download PHP source code
        run: ./bin/spc download --with-php=${{ env.PHP_VERSION }} --for-extensions=${{ env.PHP_EXTENSIONS }} --prefer-pre-built

      # Build the Drupal-ready PHP interpreter.
      - if: steps.cache.outputs.cache-hit != 'true'
        name: Build PHP interpreter
        run: ./bin/spc build ${{ env.PHP_EXTENSIONS }} --build-cli --with-libs="${{ env.PHP_LIBRARIES }}"

      # Upload the built interpreters.
      - uses: actions/upload-artifact@v4
        with:
          name: php-${{ runner.arch }}
          path: buildroot/bin
          overwrite: true

  fat:
    name: Fat binary
    runs-on: macos-latest
    needs:
      - build-platform
    steps:
      - name: Download arm64 binary
        uses: actions/download-artifact@v4
        with:
          name: php-ARM64
          path: arm64

      - name: Download x64 binary
        uses: actions/download-artifact@v4
        with:
          name: php-X64
          path: x64

      - name: Create fat binary
        run: lipo -create ./x64/php ./arm64/php -output php

      - name: Delete arm64 binary
        uses: geekyeggo/delete-artifact@v5
        with:
          name: php-ARM64

      - name: Delete x64 binary
        uses: geekyeggo/delete-artifact@v5
        with:
          name: php-X64

      - name: Upload fat binary
        uses: actions/upload-artifact@v4
        with:
          name: php-macos
          path: php
          overwrite: true
