name: Linux

on:
  push:
    branches:
      - main
      # PR branches that alter the build process should be prefixed with `build/`, so
      # that this workflow runs.
      - 'build/**'
  workflow_call:
  workflow_dispatch:

jobs:
  php-X64:
    name: PHP (x64)
    uses: ./.github/workflows/php-linux.yml
    with:
      runner: ubuntu-latest
  php-ARM64:
    name: PHP (arm64)
    uses: ./.github/workflows/php-linux.yml
    with:
      runner: ubuntu-22.04-arm

  app:
    name: Build app on ${{ matrix.runner }}
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - ubuntu-22.04-arm
    runs-on: ${{ matrix.runner }}
    needs:
      - php-X64
      - php-ARM64
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          tools: composer

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Set up Yarn
        run: |
          corepack enable
          yarn set version berry

# Dependency caching is temporarily disabled due to https://github.com/npm/cli/issues/4828.
#      - name: Cache dependencies
#        id: cache
#        uses: actions/cache@v4
#        with:
#          path: node_modules
#          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
#        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Download PHP interpreter
        uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ needs[format('php-{0}', runner.arch)].outputs.artifact-id }}

      - name: Create bin directory
        run: mv php-linux-${{ matrix.runner }} bin

      - name: Extract Composer
        run: |
          cp $(which composer) composer.phar
          phar extract -f composer.phar ./composer
          rm composer.phar
        working-directory: bin

      - name: Create application bundle
        run: |
          chmod +x ./bin/php
          curl https://curl.haxx.se/ca/cacert.pem --fail --location --output cacert.pem
          yarn run build
          yarn run make

      - name: Delete PHP interpreter artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: php-linux-${{ matrix.runner }}

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: app-linux-${{ runner.arch }}
          path: './dist/*.AppImage'
          # The AppImage is already compressed.
          compression-level: 0
          overwrite: true
